name: Build xTea Release
on:
  push:
    tags:
      - v*
jobs:
  build-linux:
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v1
    - name: Linux Build
      run: make all
      shell: bash
  build-windows-x86_64:
    runs-on: windows-latest
    steps:
    - uses: numworks/setup-msys2@v1
    - run: git config --global core.autocrlf false
    - uses: actions/checkout@v1
    - name: Prepare build environment
      run: cp ./ci/xTea.vcxproj .
    - name: Build xTea for Windows x86_64
      run: .\MSBuild.exe xTea.vcxproj
    - name: Upload Windows x86_64 build
      uses: actions/upload-artifact@v1
      with:
        name: windows-x86_64-build
        path: windows/xTea-windows-x86_64.zip
  create-release:
    needs: [ build-linux, build-windows-x86_64 ]
    runs-on: ubuntu-latest
    steps:
    - name: Get the version
      id: get_version
      run: echo ::set-output name=VERSION::$(echo $GITHUB_REF | cut -d / -f 3)
    - uses: actions/checkout@v1
    - id: read_release_notes
      run: |
        CONTENTS=`cat changelog/${{ steps.get_version.outputs.VERSION }}.txt`
        CONTENTS="${CONTENTS//'%'/'%25'}"
        CONTENTS="${CONTENTS//$'\n'/'%0A'}"
        CONTENTS="${CONTENTS//$'\r'/'%0D'}" 
        echo "::set-output name=release_notes::${CONTENTS}"
      shell: bash
    - name: Download Windows x86_64 Build Asset
      uses: actions/download-artifact@v1
      with:
        name: windows-x86_64-build
    - name: Create Release
      id: create_release
      uses: actions/create-release@latest
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: ${{ github.ref }}
        release_name: xTea ${{ github.ref }}
        body: ${{ steps.read_release_notes.outputs.release_notes }}
        draft: false
        prerelease: false
    - name: Upload Windows x86_64 Build Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: windows-x86_64-build/xTea-x86_64.zip
        asset_name: xTea-x86_64-${{ steps.get_version.outputs.VERSION }}.zip
        asset_content_type: application/zip
